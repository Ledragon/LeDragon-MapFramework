{"version":3,"sources":["shared/utilities/logger.ts","shared/utilities/loggerFactory.ts","server/services/readerService.ts","server/services/countriesReaderService.ts","shared/utilities/getNameExtension.ts"],"names":["LeDragon","LeDragon.Framework","LeDragon.Framework.Utilities","LeDragon.Framework.Utilities.logger","LeDragon.Framework.Utilities.logger.constructor","LeDragon.Framework.Utilities.logger.debugFormat","LeDragon.Framework.Utilities.logger.infoFormat","LeDragon.Framework.Utilities.logger.warningFormat","LeDragon.Framework.Utilities.logger.errorFormat","LeDragon.Framework.Utilities.logger.fatalFormat","LeDragon.Framework.Utilities.logger.format","LeDragon.Framework.Utilities.loggerFactory","LeDragon.Framework.Utilities.loggerFactory.constructor","LeDragon.Framework.Utilities.loggerFactory.getLogger","LeDragon.Framework.Map","LeDragon.Framework.Map.Services","LeDragon.Framework.Map.Services.readerService","LeDragon.Framework.Map.Services.readerService.constructor","LeDragon.Framework.Map.Services.readerService.read","LeDragon.Framework.Map.Services.countriesReaderService","LeDragon.Framework.Map.Services.countriesReaderService.constructor","LeDragon.Framework.Map.Services.countriesReaderService.get110m","LeDragon.Framework.Map.Services.countriesReaderService.get50m","LeDragon.Framework.Map.Services.countriesReaderService.get10m","LeDragon.Framework.Map.Services.countriesReaderService.getEurope110m","LeDragon.Framework.Map.Services.countriesReaderService.getStates10m","LeDragon.Framework.Map.Services.countriesReaderService.getStates","LeDragon.Framework.Utilities.Extensions","LeDragon.Framework.Utilities.Extensions.getNameObject","LeDragon.Framework.Utilities.Extensions.getNameObject.constructor","LeDragon.Framework.Utilities.Extensions.getNameObject.getName","LeDragon.Framework.Utilities.Extensions.getNameObject.logger"],"mappings":"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A,CAACA,SAASA,CAACA,CAACA;4BACvBA,IAAIA,MAAMA,GAAGA,SAASA,CAACA;4BACvBA,OAAOA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;wBACzBA,CAACA,CAACA,CAACA;wBACHA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA;oBACxBA,CAACA;oBAEDL,6CAAYA,GAAZA,UAAaA,eAAwBA;wBAArCM,iBAmBCA;wBAlBAA,IAAIA,OAAOA,GAAGA,CAACA,CAACA,KAAKA,EAA0BA,CAACA;wBAChDA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;4BACtBA,IAAIA,CAACA,OAAOA,CAACA,WAAWA,CAACA,sBAAsBA,CAACA,CAACA;4BACjDA,EAAEA,CAACA,IAAIA,CAACA,IAAIA,CAACA,cAAcA,EAAEA,UAACA,KAAKA,EAAEA,IAAIA;gCACxCA,EAAEA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;oCACXA,KAAIA,CAACA,OAAOA,CAACA,WAAWA,CAACA,KAAKA,CAACA,CAACA;gCACjCA,CAACA;gCAACA,IAAIA,CAACA,CAACA;oCACPA,KAAIA,CAACA,OAAOA,CAACA,WAAWA,CAACA,2BAA2BA,CAACA,CAACA;oCACtDA,IAAIA,GAAGA,GAAGA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,OAAOA,CAACA,kBAAkBA,CAACA,CAACA,CAACA;oCACnEA,KAAIA,CAACA,UAAUA,GAAGA,GAAGA,CAACA;oCACtBA,OAAOA,CAACA,OAAOA,CAACA,KAAIA,CAACA,SAASA,CAACA,eAAeA,CAACA,CAACA,CAACA;gCAClDA,CAACA;4BACFA,CAACA,CAACA,CAACA;wBACJA,CAACA;wBAACA,IAAIA,CAACA,CAACA;4BACPA,OAAOA,CAACA,OAAOA,CAACA,IAAIA,CAACA,SAASA,CAACA,eAAeA,CAACA,CAACA,CAACA;wBAClDA,CAACA;wBACDA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA;oBAExBA,CAACA;oBAEON,0CAASA,GAAjBA,UAAkBA,eAAwBA;wBACzCO,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,UAAUA,CAACA,QAAQA,CAACA;wBACtCA,EAAEA,CAACA,CAACA,eAAeA,CAACA,CAACA,CAACA;4BACrBA,MAAMA,GAAGA,IAAIA,CAACA,UAAUA,CAACA,QAAQA,CAACA,MAAMA,CAACA,UAAAA,CAACA;gCACzCA,MAAMA,CAACA,CAACA,CAACA,UAAUA,CAACA,OAAOA,KAAKA,eAAeA,CAACA;4BACjDA,CAACA,CAACA,CAACA;wBACJA,CAACA;wBACDA,MAAMA,CAACA,MAAMA,CAACA;oBACfA,CAACA;oBAEFP,6BAACA;gBAADA,CAjEAJ,AAiECI,EAjE2CJ,sBAAaA,EAiExDA;gBAjEYA,+BAAsBA,yBAiElCA,CAAAA;YACFA,CAACA,EA9E6BD,QAAQA,GAARA,YAAQA,KAARA,YAAQA,QA8ErCA;QAADA,CAACA,EA9EyBb,GAAGA,GAAHA,aAAGA,KAAHA,aAAGA,QA8E5BA;IAADA,CAACA,EA9EeD,SAASA,GAATA,kBAASA,KAATA,kBAASA,QA8ExBA;AAADA,CAACA,EA9EM,QAAQ,KAAR,QAAQ,QA8Ed;ACrFD,kCAAkC;AAClC,IAAO,QAAQ,CAad;AAbD,WAAO,QAAQ;IAACA,IAAAA,SAASA,CAaxBA;IAbeA,WAAAA,SAASA;QAACC,IAAAA,SAASA,CAalCA;QAbyBA,WAAAA,SAASA;YAACC,IAAAA,UAAUA,CAa7CA;YAbmCA,WAAAA,UAAUA,EAACA,CAACA;gBAC5CyB;oBAAAC;oBAWAC,CAACA;oBAVGD,+BAAOA,GAAPA;wBACIE,IAAIA,aAAaA,GAAGA,oBAAoBA,CAACA;wBACzCA,IAAIA,OAAOA,GAAGA,CAACA,aAAaA,CAACA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CAACA,CAACA,WAAWA,CAACA,QAAQA,EAAEA,CAACA,CAACA;wBAClEA,MAAMA,CAACA,CAACA,OAAOA,IAAIA,OAAOA,CAACA,MAAMA,GAAGA,CAACA,CAACA,GAAGA,OAAOA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;oBAC7DA,CAACA;oBAEDF,8BAAMA,GAANA;wBACIG,MAAMA,CAACA,IAAIA,gBAAMA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,OAAOA,EAAEA,CAACA,CAACA;oBAC/CA,CAACA;oBAELH,oBAACA;gBAADA,CAXAD,AAWCC,IAAAD;gBAXYA,wBAAaA,gBAWzBA,CAAAA;YACLA,CAACA,EAbmCzB,UAAUA,GAAVA,oBAAUA,KAAVA,oBAAUA,QAa7CA;QAADA,CAACA,EAbyBD,SAASA,GAATA,mBAASA,KAATA,mBAASA,QAalCA;IAADA,CAACA,EAbeD,SAASA,GAATA,kBAASA,KAATA,kBAASA,QAaxBA;AAADA,CAACA,EAbM,QAAQ,KAAR,QAAQ,QAad","file":"framework.server.js","sourcesContent":["/// <reference path=\"../../../typings/tsd.d.ts\" />\r\n\r\nmodule LeDragon.Framework.Utilities {\r\n    export interface Ilogger {\r\n        debugFormat: (message: string) => void;\r\n        infoFormat: (message: string) => void;\r\n        warningFormat: (message: string) => void;\r\n        errorFormat: (message: string) => void;\r\n        fatalFormat: (message: string) => void;\r\n    }\r\n\r\n    export class logger implements Ilogger {\r\n\r\n        constructor(private console: Console, private _name:string) {\r\n\r\n        }\r\n        debugFormat(message: string): void {\r\n            this.console.debug(this.format('DEBUG', message));\r\n        }\r\n\r\n        infoFormat(message: string): void {\r\n            this.console.info(this.format('INFO', message));\r\n        }\r\n\r\n        warningFormat(message: string): void {\r\n            this.console.warn(message);\r\n        }\r\n\r\n        errorFormat(message: string): void {\r\n            this.console.error(message);\r\n        }\r\n\r\n        fatalFormat(message: string): void {\r\n            this.console.error(message);\r\n        }\r\n\r\n        private format(level: string, message: any): string {\r\n            var now = moment().format('YYYY-MM-DD HH:mm:ss.SSS');\r\n            var formatted = `[${now}] - [${this._name}] - ${level} - ${message}`;\r\n            \r\n            return formatted;\r\n        }\r\n    }\r\n}","/// <reference path=\"logger.ts\" />\r\nmodule LeDragon.Framework.Utilities {\r\n    export class loggerFactory {\r\n        private static _loggerList: Array<{ name: string, logger: Ilogger }>=[];\r\n\r\n        constructor() {\r\n        }\r\n        \r\n        static getLogger(name: string): Ilogger {\r\n            var l = _.find(loggerFactory._loggerList, l=> l.name === name);\r\n            if (!l) {\r\n                l = { logger: new logger(console, name), name: name };\r\n                loggerFactory._loggerList.push(l);\r\n            }\r\n            return l.logger;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../shared/utilities/loggerFactory.ts\" />\r\n\r\nmodule LeDragon.Framework.Map.Services {\r\n    export interface IreaderService {\r\n        read: (fileName: string) => Q.IPromise<any>;\r\n    }\r\n\r\n    export class readerService implements IreaderService {\r\n        private logger: Utilities.Ilogger;\r\n        constructor(private d3: any) {\r\n            this.logger = LeDragon.Framework.Utilities.loggerFactory.getLogger('readerservice');\r\n        }\r\n\r\n        read(fileName: string): Q.IPromise<any> {\r\n            //TODO abstarct Q\r\n            this.logger.infoFormat(`Reading file ${fileName}.`);\r\n            var defered = Q.defer();\r\n            this.d3.json(fileName, (error, data) => {\r\n                if (error) {\r\n                    this.logger.errorFormat(error);\r\n                    defered.reject(error);\r\n                } else {\r\n                    this.logger.infoFormat(`File ${fileName} successfully read.`);\r\n                    defered.resolve(data);\r\n                }\r\n            });\r\n\r\n            return defered.promise;\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../../typings/d3/d3.d.ts\" />\r\n/// <reference path=\"../../../typings/Q/Q.d.ts\" />\r\n/// <reference path=\"../../../typings/geojson/geojson.d.ts\" />\r\n/// <reference path=\"../../models/topojson.d.ts\" />\r\n/// <reference path=\"../../shared/utilities/logger.ts\" />\r\n/// <reference path=\"../../shared/utilities/loggerFactory.ts\" />\r\n/// <reference path=\"./readerService.ts\"/>\r\nmodule LeDragon.Framework.Map.Services {\r\n\timport topoJsonObject = TopoJSON.TopoJSONObject;\r\n\texport interface IcountriesReader {\r\n\t\tget110m: () => Q.IPromise<TopoJSON.TopoJSONObject>;\r\n\t\tget50m: () => Q.IPromise<TopoJSON.TopoJSONObject>;\r\n\t\tget10m: () => Q.IPromise<TopoJSON.TopoJSONObject>;\r\n\r\n\t\tgetStates10m: (country_adm0_a3?: string) => Q.IPromise<Array<GeoJSON.Feature>>;\r\n\r\n\t\tgetEurope110m: () => Q.IPromise<TopoJSON.TopoJSONObject>;\r\n\t}\r\n\r\n\texport class countriesReaderService extends readerService implements IcountriesReader {\r\n\t\tprivate _110m = '/data/110m/countries.topo.json';\r\n\t\tprivate _states10mPath = '/data/10m/states.topo.json';\r\n\t\tprivate _states10m: GeoJSON.FeatureCollection;\r\n        private _logger: Utilities.Ilogger;\r\n\t\tconstructor(private _d3: any) {\r\n            super(_d3);\r\n            this._logger = Utilities.loggerFactory.getLogger('countriesReaderService');\r\n\t\t}\r\n\r\n\t\tget110m(): Q.IPromise<topoJsonObject> {\r\n\t\t\treturn super.read(this._110m);\r\n\t\t}\r\n\r\n\t\tget50m(): Q.IPromise<topoJsonObject> {\r\n\t\t\tvar defered = Q.defer<topoJsonObject>();\r\n\t\t\treturn defered.promise;\r\n\t\t}\r\n\r\n\t\tget10m(): Q.IPromise<topoJsonObject> {\r\n\t\t\tvar defered = Q.defer<topoJsonObject>();\r\n\t\t\treturn defered.promise;\r\n\t\t}\r\n\r\n\t\tgetEurope110m(): Q.IPromise<TopoJSON.TopoJSONObject> {\r\n\t\t\tvar defered = Q.defer<topoJsonObject>();\r\n\t\t\tsuper.read(this._110m).then((countries: topoJsonObject) => {\r\n\t\t\t\tconsole.log(countries);\r\n\t\t\t\tvar europe = countries;\r\n\t\t\t\tdefered.resolve(europe);\r\n\t\t\t});\r\n\t\t\treturn defered.promise;\r\n\t\t}\r\n\r\n\t\tgetStates10m(country_adm0_a3?: string): Q.IPromise<Array<GeoJSON.Feature>> {\r\n\t\t\tvar defered = Q.defer<Array<GeoJSON.Feature>>();\r\n\t\t\tif (!this._states10m) {\r\n\t\t\t\tthis._logger.debugFormat('Reading states file.');\r\n\t\t\t\td3.json(this._states10mPath, (error, data) => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\tthis._logger.errorFormat(error);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._logger.debugFormat('Successfully read states.');\r\n\t\t\t\t\t\tvar geo = topojson.feature(data, data.objects['states-provinces']);\r\n\t\t\t\t\t\tthis._states10m = geo;\r\n\t\t\t\t\t\tdefered.resolve(this.getStates(country_adm0_a3));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdefered.resolve(this.getStates(country_adm0_a3));\r\n\t\t\t}\r\n\t\t\treturn defered.promise;\r\n\r\n\t\t}\r\n\r\n\t\tprivate getStates(country_adm0_a3?: string): Array<GeoJSON.Feature> {\r\n\t\t\tvar result = this._states10m.features;\r\n\t\t\tif (country_adm0_a3) {\r\n\t\t\t\tresult = this._states10m.features.filter(f=> {\r\n\t\t\t\t\treturn f.properties.adm0_a3 === country_adm0_a3;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t}\r\n}","/// <reference path=\"logger.ts\" />\r\nmodule LeDragon.Framework.Utilities.Extensions {\r\n    export class getNameObject {\r\n        getName(): string {\r\n            var funcNameRegex = /function (.{1,})\\(/;\r\n            var results = (funcNameRegex).exec((this).constructor.toString());\r\n            return (results && results.length > 1) ? results[1] : \"\";\r\n        }\r\n\r\n        logger(): Ilogger {\r\n            return new logger(console, this.getName());\r\n        }\r\n        \r\n    }\r\n}"],"sourceRoot":"/source/"}